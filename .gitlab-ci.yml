variables:
  DOCKER_DRIVE: overlay2

image: node:8-alpine

services:
  - docker:dind

stages:
  - dependencies
  - stylecheck
  - test
  - compile
  - build
  - scanning
  - cleanup

cache:
  key: "$CI_BUILD_REF_SLUG"
  paths:
    - node_modules/

install_dependencies:
  stage: dependencies
  before_script:
    - node -v
    - npm -v
  script:
    - npm install
  after_script:
    - ./node_modules/.bin/tsc -v

do_lint_check:
  stage: stylecheck
  script:
    - npm run lint

do_format_check:
  stage: stylecheck
  script:
    - npm run prettier:check

run_tests:
  stage: test
  coverage: '/All files[^|]*\|[^|]*\s+([\d\.]+)/'
  artifacts:
    paths:
      - coverage/
  script:
    - npm test

compile_source:
  stage: compile
  artifacts:
    paths:
      - build/
  script:
    - npm run build

build_image:
  stage: build
  image: docker:latest
  before_script:
    - docker info
  script:
    - docker build --no-cache -t tsnodestarter:${CI_COMMIT_SHA:0:6} .

container_scanning:
  stage: scanning
  image: docker:latest
  variables:
    DOCKER_DRIVER: overlay2
  allow_failure: true
  services:
    - docker:dind
  before_script:
    - apk update && apk add --update --no-cache git make bash wget ca-certificates
  script:
    - docker run -d --name db arminc/clair-db:latest
    - docker run -p 6060:6060 --link db:postgres -d --name clair --restart on-failure arminc/clair-local-scan:v2.0.1
    - apk add -U wget ca-certificates
    - wget https://github.com/arminc/clair-scanner/releases/download/v8/clair-scanner_linux_amd64
    - mv clair-scanner_linux_amd64 clair-scanner
    - chmod +x clair-scanner
    - touch clair-whitelist.yml
    - while( ! wget -q -O /dev/null http://docker:6060/v1/namespaces ) ; do sleep 1 ; done
    - retries=0
    - echo "Waiting for clair daemon to start"
    - while( ! wget -T 10 -q -O /dev/null http://docker:6060/v1/namespaces ) ; do sleep 1 ; echo -n "." ; if [ $retries -eq 10 ] ; then echo " Timeout, aborting." ; exit 1 ; fi ; retries=$(($retries+1)) ; done
    - ./clair-scanner -c http://docker:6060 --ip $(hostname -i) -r gl-container-scanning-report.json -l clair.log -w clair-whitelist.yml tsnodestarter:${CI_COMMIT_SHA:0:6} || true

image_cleanup:
  stage: cleanup
  image: docker:latest
  script:
    - docker rmi -f tsnodestarter:${CI_COMMIT_SHA:0:6}
